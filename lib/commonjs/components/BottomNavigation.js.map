{"version":3,"sources":["BottomNavigation.tsx"],"names":["MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Touchable","TouchableRipple","supported","style","children","borderless","centered","rippleColor","rest","SceneComponent","props","component","React","createElement","PureComponent","BottomNavigation","scenes","route","jumpTo","key","nextProps","prevState","navigationState","index","routes","tabs","map","_","i","Animated","Value","offsets","nextState","current","previous","loaded","includes","handleKeyboardShow","setState","keyboard","timing","state","visible","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToCurrentIndex","shifting","isShifting","ripple","setValue","parallel","finished","tab","forEach","offset","handleLayout","e","layout","nativeEvent","height","width","measured","handleTabPress","onTabPress","onIndexChange","findIndex","length","touch","Platform","OS","Keyboard","addListener","prevProps","removeListener","renderScene","renderIcon","renderLabel","getLabelText","title","getBadge","badge","getColor","color","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","theme","colors","isDarkTheme","dark","mode","StyleSheet","flatten","customBackground","backgroundColor","elevation","approxBackgroundColor","surface","primary","interpolate","inputRange","outputRange","isDark","isLight","textColor","white","black","activeTintColor","inactiveTintColor","alpha","rgb","string","touchColor","maxTabWidth","tabWidth","Math","min","styles","container","content","background","opacity","top","focused","absoluteFill","bar","transform","translateY","position","barContent","bottom","items","maxWidth","left","borderRadius","scale","active","activeOpacity","inactiveOpacity","item","iconContainer","iconWrapper","icon","badgeContainer","right","String","labelContainer","labelWrapper","label","Component","defaultProps","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","marginHorizontal","alignSelf","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\n\nimport * as React from 'react';\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  StyleProp,\n  Platform,\n  Keyboard,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport color from 'color';\nimport overlay from '../styles/overlay';\nimport Icon, { IconSource } from './Icon';\nimport Surface from './Surface';\nimport Badge from './Badge';\nimport TouchableRipple from './TouchableRipple';\nimport Text from './Typography/Text';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Route = {\n  key: string;\n  title?: string;\n  icon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype Props = {\n  /**\n   * Whether the shifting style is used, the active tab appears wider and the inactive tabs won't have a label.\n   * By default, this is `true` when you have more than 3 tabs.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number reprsenting the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n   * - `color`: color to use as background color for shifting bottom navigation\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Music', icon: 'queue-music', color: '#3F51B5' },\n   *     { key: 'albums', title: 'Albums', icon: 'album', color: '#009688' },\n   *     { key: 'recents', title: 'Recents', icon: 'history', color: '#795548' },\n   *     { key: 'purchased', title: 'Purchased', icon: 'shopping-cart', color: '#607D8B' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route }) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Style for the bottom navigation bar.\n   * You can set a bottom padding here if you have a translucent navigation bar on Android:\n   *\n   * ```js\n   * barStyle={{ paddingBottom: 48 }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  visible: Animated.Value;\n  /**\n   * Active state of individual tab items, active state is 1 and inactve state is 0.\n   */\n  tabs: Animated.Value[];\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecesary re-renders.\n   */\n  offsets: Animated.Value[];\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * Use don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n  index: Animated.Value;\n  /**\n   * Animation for the touch, used to determine it's scale and opacity.\n   */\n  touch: Animated.Value;\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  ripple: Animated.Value;\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  layout: { height: number; width: number; measured: boolean };\n  /**\n   * Currently active index. Used only for getDerivedStateFromProps.\n   */\n  current: number;\n  /**\n   * Previously active index. Used to determine the position of the ripple.\n   */\n  previous: number;\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  loaded: number[];\n  /**\n   * Trak whether the keyboard is visible to show and hide the navigation bar.\n   */\n  keyboard: boolean;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = 9999;\n\n// @ts-ignore\nconst Touchable = TouchableRipple.supported\n  ? TouchableRipple\n  : // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ style, children, borderless, centered, rippleColor, ...rest }: any) => (\n      <TouchableWithoutFeedback {...rest}>\n        <View style={style}>{children}</View>\n      </TouchableWithoutFeedback>\n    );\n\nclass SceneComponent extends React.PureComponent<any> {\n  render() {\n    const { component, ...rest } = this.props;\n    return React.createElement(component, rest);\n  }\n}\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tab-navigator](https://github.com/react-navigation/react-navigation-material-bottom-tab-navigator).\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     index: 0,\n *     routes: [\n *       { key: 'music', title: 'Music', icon: 'queue-music' },\n *       { key: 'albums', title: 'Albums', icon: 'album' },\n *       { key: 'recents', title: 'Recents', icon: 'history' },\n *     ],\n *   };\n *\n *   _handleIndexChange = index => this.setState({ index });\n *\n *   _renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   render() {\n *     return (\n *       <BottomNavigation\n *         navigationState={this.state}\n *         onIndexChange={this._handleIndexChange}\n *         renderScene={this._renderScene}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass BottomNavigation extends React.Component<Props, State> {\n  /**\n   * Function which takes a map of route keys to components.\n   * Pure components are used to minmize re-rendering of the pages.\n   * This drastically improves the animation performance.\n   */\n  static SceneMap(scenes: {\n    [key: string]: React.ComponentType<{\n      route: Route;\n      jumpTo: (key: string) => void;\n    }>;\n  }) {\n    return ({\n      route,\n      jumpTo,\n    }: {\n      route: Route;\n      jumpTo: (key: string) => void;\n    }) => (\n      <SceneComponent\n        key={route.key}\n        component={scenes[route.key ? route.key : '']}\n        route={route}\n        jumpTo={jumpTo}\n      />\n    );\n  }\n\n  static defaultProps = {\n    labeled: true,\n    keyboardHidesNavigationBar: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: any, prevState: State) {\n    const { index, routes } = nextProps.navigationState;\n\n    // Re-create animated values if routes have been added/removed\n    // Preserve previous animated values if they exist, so we don't break animations\n    const tabs = routes.map(\n      // focused === 1, unfocused === 0\n      (_: any, i: number) =>\n        prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0)\n    );\n    const offsets = routes.map(\n      // offscreen === 1, normal === 0\n      (_: any, i: number) =>\n        prevState.offsets[i] || new Animated.Value(i === index ? 0 : 1)\n    );\n\n    const nextState = {\n      tabs,\n      offsets,\n    };\n\n    if (index !== prevState.current) {\n      /* $FlowFixMe */\n      Object.assign(nextState, {\n        // Store the current index in state so that we can later check if the index has changed\n        current: index,\n        previous: prevState.current,\n        // Set the current tab to be loaded if it was not loaded before\n        loaded: prevState.loaded.includes(index)\n          ? prevState.loaded\n          : [...prevState.loaded, index],\n      });\n    }\n\n    return nextState;\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { index } = this.props.navigationState;\n\n    this.state = {\n      visible: new Animated.Value(1),\n      tabs: [],\n      offsets: [],\n      index: new Animated.Value(index),\n      ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n      layout: { height: 0, width: 0, measured: false },\n      current: index,\n      previous: 0,\n      loaded: [index],\n      keyboard: false,\n    };\n  }\n\n  componentDidMount() {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    this.animateToCurrentIndex();\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this.handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this.handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this.handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this.handleKeyboardHide);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.navigationState.index === this.props.navigationState.index) {\n      return;\n    }\n\n    // Reset offsets of previous and current tabs before animation\n    this.state.offsets.forEach((offset, i) => {\n      if (\n        i === this.props.navigationState.index ||\n        i === prevProps.navigationState.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    this.animateToCurrentIndex();\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this.handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this.handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this.handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this.handleKeyboardHide);\n    }\n  }\n\n  private handleKeyboardShow = () =>\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start()\n    );\n\n  private handleKeyboardHide = () =>\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n\n  private animateToCurrentIndex = () => {\n    const shifting = this.isShifting();\n    const { routes, index } = this.props.navigationState;\n\n    // Reset the ripple to avoid glitch if it's currently animating\n    this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n    Animated.parallel([\n      Animated.timing(this.state.ripple, {\n        toValue: 1,\n        duration: shifting ? 400 : 0,\n        useNativeDriver: true,\n      }),\n      ...routes.map((_, i) =>\n        Animated.timing(this.state.tabs[i], {\n          toValue: i === index ? 1 : 0,\n          duration: shifting ? 150 : 75,\n          useNativeDriver: true,\n        })\n      ),\n    ]).start(({ finished }) => {\n      // Workaround a bug in native animations where this is reset after first animation\n      this.state.tabs.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n      // Update the index to change bar's bacground color and then hide the ripple\n      this.state.index.setValue(index);\n      this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n      if (finished) {\n        // Position all inactive screens offscreen to save memory usage\n        // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n        this.state.offsets.forEach((offset, i) => {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n        measured: true,\n      },\n    });\n  };\n\n  private handleTabPress = (index: number) => {\n    const { navigationState, onTabPress, onIndexChange } = this.props;\n\n    if (onTabPress) {\n      onTabPress({\n        route: navigationState.routes[index],\n      });\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  private jumpTo = (key: string) => {\n    const index = this.props.navigationState.routes.findIndex(\n      route => route.key === key\n    );\n\n    this.props.onIndexChange(index);\n  };\n\n  private isShifting = () =>\n    typeof this.props.shifting === 'boolean'\n      ? this.props.shifting\n      : this.props.navigationState.routes.length > 3;\n\n  render() {\n    const {\n      navigationState,\n      renderScene,\n      renderIcon,\n      renderLabel,\n      getLabelText = ({ route }: { route: Route }) => route.title,\n      getBadge = ({ route }: { route: Route }) => route.badge,\n      getColor = ({ route }: { route: Route }) => route.color,\n      getAccessibilityLabel = ({ route }: { route: Route }) =>\n        route.accessibilityLabel,\n      getTestID = ({ route }: { route: Route }) => route.testID,\n      activeColor,\n      inactiveColor,\n      keyboardHidesNavigationBar,\n      barStyle,\n      labeled,\n      style,\n      theme,\n    } = this.props;\n\n    const { layout, loaded } = this.state;\n    const { routes } = navigationState;\n    const { colors, dark: isDarkTheme, mode } = theme;\n\n    const shifting = this.isShifting();\n\n    const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n      StyleSheet.flatten(barStyle) || {};\n\n    const approxBackgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n\n    const backgroundColor = shifting\n      ? this.state.index.interpolate({\n          inputRange: routes.map((_, i) => i),\n          //@ts-ignore\n          outputRange: routes.map(\n            route => getColor({ route }) || approxBackgroundColor\n          ),\n        })\n      : approxBackgroundColor;\n\n    const isDark = !color(approxBackgroundColor).isLight();\n\n    const textColor = isDark ? white : black;\n    const activeTintColor =\n      typeof activeColor !== 'undefined' ? activeColor : textColor;\n    const inactiveTintColor =\n      typeof inactiveColor !== 'undefined'\n        ? inactiveColor\n        : color(textColor)\n            .alpha(0.5)\n            .rgb()\n            .string();\n\n    const touchColor = color(activeColor || activeTintColor)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n    const tabWidth = Math.min(\n      // Account for horizontal padding around the items\n      (layout.width * 4) / routes.length,\n      maxTabWidth\n    );\n\n    return (\n      <View\n        style={[styles.container, style]}\n        pointerEvents={layout.measured ? 'auto' : 'none'}\n      >\n        <View style={[styles.content, { backgroundColor: colors.background }]}>\n          {routes.map((route, index) => {\n            if (!loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n\n            const opacity = this.state.tabs[index];\n            const top = this.state.offsets[index].interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, FAR_FAR_AWAY],\n            });\n\n            const focused = navigationState.index === index;\n\n            return (\n              <Animated.View\n                key={route.key}\n                pointerEvents={focused ? 'auto' : 'none'}\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={[StyleSheet.absoluteFill, { opacity }]}\n                collapsable={false}\n                removeClippedSubviews={\n                  // On iOS, set removeClippedSubviews to true only when not focused\n                  // This is an workaround for a bug where the clipped view never re-appears\n                  Platform.OS === 'ios' ? navigationState.index !== index : true\n                }\n              >\n                <Animated.View style={[styles.content, { top }]}>\n                  {renderScene({\n                    route,\n                    jumpTo: this.jumpTo,\n                  })}\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </View>\n        <Surface\n          style={\n            [\n              styles.bar,\n              keyboardHidesNavigationBar\n                ? {\n                    // When the keyboard is shown, slide down the navigation bar\n                    transform: [\n                      {\n                        translateY: this.state.visible.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [this.state.layout.height, 0],\n                        }),\n                      },\n                    ],\n                    // Absolutely position the navigation bar so that the content is below it\n                    // This is needed to avoid gap at bottom when the navigation bar is hidden\n                    position: this.state.keyboard ? 'absolute' : null,\n                  }\n                : null,\n              barStyle,\n            ] as StyleProp<ViewStyle>\n          }\n          pointerEvents={\n            keyboardHidesNavigationBar && this.state.keyboard ? 'none' : 'auto'\n          }\n          onLayout={this.handleLayout}\n        >\n          <Animated.View style={[styles.barContent, { backgroundColor }]}>\n            <SafeAreaView\n              forceInset={{ top: 'never', bottom: 'always' }}\n              style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n            >\n              {shifting ? (\n                <Animated.View\n                  pointerEvents=\"none\"\n                  style={[\n                    styles.ripple,\n                    {\n                      // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                      // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                      top: BAR_HEIGHT / 2 - layout.width / 8,\n                      left:\n                        navigationState.index * tabWidth +\n                        tabWidth / 2 -\n                        layout.width / 8,\n                      height: layout.width / 4,\n                      width: layout.width / 4,\n                      borderRadius: layout.width / 2,\n                      backgroundColor: getColor({\n                        route: routes[navigationState.index],\n                      }),\n                      transform: [\n                        {\n                          // Scale to twice the size  to ensure it covers the whole navigation bar\n                          scale: this.state.ripple.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [0, 8],\n                          }),\n                        },\n                      ],\n                      opacity: this.state.ripple.interpolate({\n                        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                        outputRange: [0, 0, 1, 1],\n                      }),\n                    },\n                  ]}\n                />\n              ) : null}\n              {routes.map((route, index) => {\n                const focused = navigationState.index === index;\n                const active = this.state.tabs[index];\n\n                // Scale the label up\n                const scale =\n                  labeled && shifting\n                    ? active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.5, 1],\n                      })\n                    : 1;\n\n                // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n                const translateY = labeled\n                  ? shifting\n                    ? active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [7, 0],\n                      })\n                    : 0\n                  : 7;\n\n                // We render the active icon and label on top of inactive ones and cross-fade them on change.\n                // This trick gives the illusion that we are animating between active and inactive colors.\n                // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n                const activeOpacity = active;\n                const inactiveOpacity = active.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                });\n\n                const badge = getBadge({ route });\n\n                return (\n                  <Touchable\n                    key={route.key}\n                    borderless\n                    centered\n                    rippleColor={touchColor}\n                    onPress={() => this.handleTabPress(index)}\n                    testID={getTestID({ route })}\n                    accessibilityLabel={getAccessibilityLabel({ route })}\n                    accessibilityTraits={\n                      focused ? ['button', 'selected'] : 'button'\n                    }\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                    accessibilityStates={['selected']}\n                    style={styles.item}\n                  >\n                    <View pointerEvents=\"none\">\n                      <Animated.View\n                        style={[\n                          styles.iconContainer,\n                          { transform: [{ translateY }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: activeOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: true,\n                              color: activeTintColor,\n                            })\n                          ) : (\n                            <Icon\n                              source={route.icon as IconSource}\n                              color={activeTintColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: inactiveOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: false,\n                              color: inactiveTintColor,\n                            })\n                          ) : (\n                            <Icon\n                              source={route.icon as IconSource}\n                              color={inactiveTintColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                        <View\n                          style={[\n                            styles.badgeContainer,\n                            {\n                              right:\n                                (badge != null && typeof badge !== 'boolean'\n                                  ? String(badge).length * -2\n                                  : 0) - 2,\n                            },\n                          ]}\n                        >\n                          {typeof badge === 'boolean' ? (\n                            <Badge visible={badge} size={8} />\n                          ) : (\n                            <Badge visible={badge != null} size={16}>\n                              {badge}\n                            </Badge>\n                          )}\n                        </View>\n                      </Animated.View>\n                      {labeled ? (\n                        <Animated.View\n                          style={[\n                            styles.labelContainer,\n                            { transform: [{ scale }] },\n                          ]}\n                        >\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: activeOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: true,\n                                color: activeTintColor,\n                              })\n                            ) : (\n                              <Text\n                                style={[\n                                  styles.label,\n                                  { color: activeTintColor },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                          {shifting ? null : (\n                            <Animated.View\n                              style={[\n                                styles.labelWrapper,\n                                { opacity: inactiveOpacity },\n                              ]}\n                            >\n                              {renderLabel ? (\n                                renderLabel({\n                                  route,\n                                  focused: false,\n                                  color: inactiveTintColor,\n                                })\n                              ) : (\n                                <Text\n                                  style={[\n                                    styles.label,\n                                    { color: inactiveTintColor },\n                                  ]}\n                                >\n                                  {getLabelText({ route })}\n                                </Text>\n                              )}\n                            </Animated.View>\n                          )}\n                        </Animated.View>\n                      ) : (\n                        <View style={styles.labelContainer} />\n                      )}\n                    </View>\n                  </Touchable>\n                );\n              })}\n            </SafeAreaView>\n          </Animated.View>\n        </Surface>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2,\n  },\n});\n"]}